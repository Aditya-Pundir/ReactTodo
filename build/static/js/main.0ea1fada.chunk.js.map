{"version":3,"sources":["MyComponents/Header.js","MyComponents/TodoItem.js","MyComponents/Todos.js","MyComponents/AddTodo.js","MyComponents/About.js","MyComponents/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","searchBar","placeholder","defaultProps","TodoItem","todo","onDelete","desc","onClick","Todos","style","minHeight","todos","length","map","sno","AddTodo","addTodo","useState","setTitle","setDesc","onSubmit","e","preventDefault","htmlFor","value","onChange","target","aria-describedby","required","About","paddingTop","Footer","App","initTodo","localStorage","getItem","JSON","parse","setTodos","filter","myTodo","useEffect","setItem","stringify","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea1fada.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header(props) {\n  // Instead of props as a parameter you can write curly braces and write title inside that and then you can directly use the title variable instead of writing props.title\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </li>\n          </ul>\n\n          {/* If you want to give a condition that if it is true then only show this component otherwise don't or show something else then you can do it like below: */}\n\n          {/* The below is known as turnery operator */}\n          {props.searchBar ? (\n            <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form>\n          ) : (\n            \"\"\n            // And if you want to show something instead of this blank space, then you can write it instead of this empty space.\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Declaring the type of the props, Proptypes\nHeader.propTypes = {\n  title: PropTypes.string,\n  // searchBar: PropTypes.bool.isRequired, // The method isRequired is used when you want a component to be required but only if you haven't passed the defaultProps for that\n  searchBar: PropTypes.bool,\n};\n// The benefit of Proptypes is that you can build your code robust and can do strict type checking.\n\n// Declaring the defaultProps\nHeader.defaultProps = {\n  title: \"Your title here\",\n  searchBar: true,\n};\n// The benefit of defaultProps is that if the user has not passed the props then these props will be shown.\n","import React from \"react\";\n\nexport const TodoItem = ({ todo, onDelete }) => {\n  return (\n    <div>\n      <h4>{todo.title}</h4>\n      <p>{todo.desc}</p>\n      <button\n        className=\"btn btn-sm btn-danger\"\n        onClick={() => {\n          onDelete(todo);\n        }}\n      >\n        Delete\n      </button>\n      <hr />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n// import \"./todos.css\"; // Importing a stylesheet\n\nexport const Todos = (props) => {\n  let containerStyle = {\n    minHeight: \"70vh\",\n\n    // This is also a way of writing css in react\n  };\n  return (\n    <div className=\"container\" style={containerStyle}>\n      <h3>Todos List</h3>\n      {props.todos.length === 0\n        ? \"No TODOs to display\"\n        : props.todos.map((todo) => {\n            return (\n              <TodoItem todo={todo} key={todo.sno} onDelete={props.onDelete} />\n            );\n          })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const AddTodo = ({ addTodo }) => {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    addTodo(title, desc);\n    setTitle(\"\");\n    setDesc(\"\");\n  };\n  return (\n    <div className=\"container my-3\">\n      <h3 className=\"pt-5 my-3\">Add a TODO</h3>\n      <form onSubmit={submit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"todoTitle\" className=\"form-label\">\n            TODO Title\n          </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className=\"form-control\"\n            id=\"todoTitle\"\n            aria-describedby=\"emailHelp\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"todoDesc\" className=\"form-label\">\n            Todo Description\n          </label>\n          <input\n            type=\"text\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n            className=\"form-control\"\n            id=\"todoDesc\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-sm btn-success\">\n          Add TODO\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const About = () => {\n  const style = {\n    paddingTop: \"5rem\",\n  };\n  return (\n    <div style={style}>\n      This is an about component.\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nulla maxime\n        est velit necessitatibus debitis quo soluta reprehenderit molestiae\n        aliquam sequi temporibus, voluptatem aperiam consequuntur, in, quae\n        tenetur dolores hic! Ut, enim. Porro, repellat labore?\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"bg-dark text-light py-4\">\n      <p className=\"text-center\">Copyright &copy; MyTodosList.com</p>\n    </footer>\n  );\n};\n","import \"./App.css\";\nimport Header from \"./MyComponents/Header\";\nimport { Todos } from \"./MyComponents/Todos\";\nimport { AddTodo } from \"./MyComponents/AddTodo\";\nimport { About } from \"./MyComponents/About\";\nimport { Footer } from \"./MyComponents/Footer\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  let initTodo;\n  if (localStorage.getItem(\"todos\") === null) {\n    initTodo = [];\n  } else {\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  const onDelete = (todo) => {\n    // Deleting this way in React does not worker.\n    // let index = todos.indexOf(todo);\n    // todos.splice(index, 1)\n\n    setTodos(\n      todos.filter((e) => {\n        return e !== todo;\n      })\n    );\n  };\n  const addTodo = (title, desc) => {\n    let sno;\n    if (todos.length === 0) {\n      sno = 0;\n    } else {\n      sno = todos[todos.length - 1].sno + 1;\n    }\n    const myTodo = {\n      sno: sno,\n      title: title,\n      desc: desc,\n    };\n    setTodos([...todos, myTodo]);\n  };\n  // setTodos is just a callback function that you can use to define the callback.\n  // todos is the name of the array\n  const [todos, setTodos] = useState(initTodo);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  return (\n    <>\n      {/* The commented down code below is to show the topic of Proptypes */}\n      {/* <Header title={45} searchBar={false} />  */}\n      <Router>\n        <Header title=\"TODOs List\" searchBar={false} />\n        <Switch>\n          {/* If you do not write exact keyword as down below then react will not go to the about page even after you write /about in the field of path because of the matching / in both of them */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <>\n                  <AddTodo addTodo={addTodo} />\n                  <Todos todos={todos} onDelete={onDelete} />\n                </>\n              );\n            }}\n          ></Route>\n          <Route\n            exact\n            path=\"/about\"\n            render={() => {\n              return <About />;\n            }}\n          ></Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}